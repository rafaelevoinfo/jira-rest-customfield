<repository lastmodified='20200118054828.151'>
  <resource id='org.thejaxx.jira.rest.plugin.thejaxx-rest-plugin/1.0.0' symbolicname='org.thejaxx.jira.rest.plugin.thejaxx-rest-plugin' presentationname='Jira Rest Values Plugin' uri='thejaxx-rest-plugin-1.0.0.jar' version='1.0.0'>
    <description>This plugin provides a custom field to be retrieved from url</description>
    <size>2096004</size>
    <documentation>https://thejaxx.co.il/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='org.thejaxx.jira.rest.plugin.thejaxx-rest-plugin'/>
      <p n='presentationname' v='Jira Rest Values Plugin'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.example.plugins.tutorial.crud.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.core.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.core.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.event.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.event.api</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.bc.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.bc.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.bc.issue.search))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.bc.issue.search</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.bc.project))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.bc.project</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.component))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.component</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.config))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.config</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.config.properties))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.config.properties</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.event.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.event.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.event.type))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.event.type</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.impl))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.impl</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.manager))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.manager</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.persistence))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.persistence</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.searchers))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.searchers</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.searchers.renderer))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.searchers.renderer</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.searchers.transformer))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.searchers.transformer</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.statistics))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.statistics</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.customfields.view))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.customfields.view</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields.layout.field))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields.layout.field</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.search))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.search</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.search.searchers.impl))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.search.searchers.impl</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.search.searchers.renderer))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.search.searchers.renderer</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.search.searchers.transformer))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.search.searchers.transformer</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.statistics))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.statistics</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.transport))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.transport</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.jql.operand))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.jql.operand</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.jql.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.jql.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.permission))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.permission</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.customfield))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.plugin.customfield</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.util.json))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.util.json</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.web))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.web</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.web.action))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.web.action</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query.clause))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query.clause</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query.operand))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query.operand</require>
    <require name='package' filter='(&amp;(package=com.atlassian.query.operator))' extend='false' multiple='false' optional='false'>Import package com.atlassian.query.operator</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.pluginsettings))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api.pluginsettings</require>
    <require name='package' filter='(&amp;(package=com.atlassian.templaterenderer))' extend='false' multiple='false' optional='false'>Import package com.atlassian.templaterenderer</require>
    <require name='package' filter='(&amp;(package=com.atlassian.velocity))' extend='false' multiple='false' optional='false'>Import package com.atlassian.velocity</require>
    <require name='package' filter='(&amp;(package=com.google.common.base))' extend='false' multiple='false' optional='false'>Import package com.google.common.base</require>
    <require name='package' filter='(&amp;(package=com.google.common.collect))' extend='false' multiple='false' optional='false'>Import package com.google.common.collect</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.annotation))' extend='false' multiple='false' optional='false'>Import package javax.xml.bind.annotation</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='false'>Import package org.slf4j</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.parsing</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.io))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.io</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='false'>Import package org.springframework.util</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
</repository>